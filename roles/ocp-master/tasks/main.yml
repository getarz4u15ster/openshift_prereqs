---
    - name: rhn_registration | main | Check if user is using RHEL
      assert:
        that: "ansible_distribution == 'RedHat'"
    
    - name: Install Katello rpm for satellite registration
      yum:
        name: "https://{{sat_svr}}/pub/katello-ca-consumer-latest.noarch.rpm"
        state: installed
      ignore_erros: true
      
    - name: Subscribing to Satellite Openshift Content Channel
      redhat_subscription:
        state: present
        activationkey: "{{ akey }}"
        org_id: "{{ org }}"
      ignore_errors: true
     
    - name: Restart goferd
      service:
        name: goferd
        state: started
        enabled: true
        
    - name: Enable Repos Specific to OCP 3.5
      command: subscription-manager repos --enable="rhel--7-server-rpms" --enable="rhel-7-server-extras-rpms" --enable"rhel-7-fast-datapath-rpms"
      
    - name: Update all hosts
      yum:
        name: '*'
        state: latest
        
    - name: Installing Dependencies for Openshift Container Platform V3.5
      action: "{{ ansible_pkg_mgr }}"
      args:
        name: "{{ item.name }}"
        state: "{{ item.state }}"
      with_items:
        - { katello-agent, state: present }
        - { wget, state: present }
        - { git, state: present }
        - { net-tools: state: present }
        - { bind-utils, state: present }
        - { iptables-services, state: present }
        - { bridge-utils, state: present }
        - { sos, state: present }
        - { psacct, state: present }
        - { atomic-openshift-utils, state: present }
        - { docker, state: present }
        - { NetworkManager, state: present }
    
    - name: Creating Docker Storage Configuration File
      copy:
        src: docker-storage-setup
        dest: "{{ dockercfg }}"
        owner: root
        group: root
        mode: 755
        
    - name: check if docker-vg exists
      stat:
        path: /dev/docker-vg
        register: dockervg_result
    
    - name: Creating Docker thing Pools and Configuring storage for docker Containers
      command: "docker-storage-setup"
      when: dockervg_result.stat.exists == False
        
    - name: Creating Docker deamon file
      copy:
        src: docker
        dest: "{{ dockercfg }}"
        owner: root
        group: root
        mode: 0775
        
    - name: Enable docker service
      systemd:
        name: docker
        state: started
        enabled: True
        
    - name: Ensure NetworkManager Setting for dns is disabled
      copy:
        src: NetworkManager.conf
        dest: "{{ nm_conf }}"
        owner: root
        group: root
        mode: 0644
        
    - name: Restart NetworkManager
      systemd:
        name: NetworkManager
        state: restarted
        enabled: True
